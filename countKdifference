/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var countKDifference = function(nums, k) {
    let hash = {}
    let count = 0
    for(let i = 0; i< nums.length; i++) {
        let n = nums[i]
        if(hash[n + k]) {
            count = count + hash[n + k] 
        } 
        if(hash[n-k]) {
            count = count + hash[n - k]
        } 
        if(!hash[n]) {
         hash[n] = 1   
        } else {
            hash[n] = hash[n] + 1
        }
    }
    return count
};

var sortArrayByParity = function(nums) {
    let left = 0
    let right = nums.length - 1
    
    while( left < right ) {
        if (nums[left] % 2 === 1 && nums[right] % 2 === 0) {
            let x = nums[left]
            nums[left] = nums[right]
            nums[right] = x
            left++, right--
        } else if (nums[left] % 2 === 1 && nums[right] % 2 === 1) {
            right--
        } else {
            left++
        }
    }
    return nums
};

sortArrayByParity([3, 1, 2, 4])

var reverseString = function(s) {
    reverse(0, s.length - 1)
    
    function reverse(i, j) {
        if (i >= j) return;
        [s[i], s[j]] = [s[j], s[i]];
        console.log(s)
        reverse(i + 1, j - 1)
    }
};

reverseString(["H","a","n","n","a","h"])